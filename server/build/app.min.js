/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.app = void 0;\nconst express_1 = __importDefault(__webpack_require__(/*! express */ \"express\"));\nconst app = (0, express_1.default)();\nexports.app = app;\napp.enable('trust proxy');\napp.use(function (req, res, next) {\n    if (req.hostname === 'localhost') {\n        next();\n        return;\n    }\n    // Use below when using our own domain name\n    //if (req.get('X-Forwarded-Proto') === 'https' && !req.subdomains.length) {\n    //    next(); return;\n    //}\n    // Use below for a secure appspot domain, e.g. https://kickinjoes.appspot.com\n    if (req.get('X-Forwarded-Proto') === 'https') {\n        next();\n        return;\n    }\n    // Use below when using our own domain name\n    // We currently only have the www subdomain\n    let hostname = req.hostname.replace(/^www\\./i, '');\n    // res.redirect(`https://${hostname}${req.originalUrl}`)\n    res.redirect(`https://${hostname}${req.originalUrl}`);\n});\n// Static files handler\napp.get('/(*.css)|(*.js)|(*.txt)|(*.xml)|(*.wasm)|(*.pdf)', (req, res) => {\n    var fileName = req.url;\n    res.sendFile(__dirname + '/static/' + fileName, { maxAge: '0m' });\n});\n// Static files handler\napp.get('(*.jpg)|(*.svg)|(*.png)|(*.ico)|(*.webmanifest)', (req, res) => {\n    var fileName = req.url;\n    res.sendFile(__dirname + '/static/' + fileName, { maxAge: '30d' });\n});\n// Static files handler\napp.get('(*.woff)|(*.woff2)|(*.otf)|(*.ttf)', (req, res) => {\n    var fileName = req.url;\n    res.sendFile(__dirname + '/static/' + fileName, { maxAge: '0m' });\n});\n// Static files handler\napp.get('/([\\\\s\\\\S]*)|(/)', async (req, res) => {\n    res.sendFile(__dirname + '/static/index.html', { maxAge: '5m' });\n});\n// Start the server\nconst PORT = process.env.PORT || 8080;\napp.listen(PORT, () => {\n    console.log(`App listening on port ${PORT}`);\n});\n\n\n//# sourceURL=C:\\projects\\antwerp\\server\\src\\app.ts");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("express");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.ts");
/******/ 	
/******/ })()
;